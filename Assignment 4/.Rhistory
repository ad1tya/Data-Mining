H_Clust_complete <- eclust(distMat, "hclust", k=11, hc_method="complete", graph = TRUE)
plot(H_Clust_complete, labels=europe[,1])
fviz_dend(H_Clust_complete, data=europe, k = 11, main="Complete", show_labels=TRUE,horiz = TRUE)
H_Clust_single <- eclust(europe, "hclust", k = 11,  hc_method="single")
plot(H_Clust_single, labels=europe[,1])
fviz_dend(H_Clust_single, data=europe, main="Single", show_labels=TRUE)
H_Clust_complete <- eclust(europe, "hclust", k=11, hc_method="complete", graph = TRUE)
plot(H_Clust_complete, labels=europe[,1])
fviz_dend(H_Clust_complete, data=europe, k = 11, main="Complete", show_labels=TRUE)
fviz_dend(H_Clust_complete, data=europe, k = 11, main="Complete", show_labels=TRUE, h = 125)
fviz_dend(H_Clust_complete, data=europe, main="Complete", show_labels=TRUE, h = 125)
H_Clust_complete <- eclust(europe, "hclust", hc_method="complete", graph = TRUE)
fviz_dend(H_Clust_complete, data=europe, main="Complete", show_labels=TRUE, h = 125)
H_Clust_complete <- eclust(europe, "hclust", hc_method="complete", graph = TRUE)
plot(H_Clust_complete, labels=europe[,1])
fviz_dend(H_Clust_complete, data=europe, main="Complete", show_labels=TRUE, h = 125)
fviz_dend(H_Clust_complete, data=europe, main="Complete", show_labels=TRUE, k = NULL, h = 125)
fviz_dend(H_Clust_complete, k = NULL, h = 125, main="Complete", show_labels=TRUE)
fviz_dend(H_Clust_complete, k = NULL, h = 125, main="Complete", show_labels=TRUE)
fviz_dend(H_Clust_complete, h = 125, main="Complete", show_labels=TRUE)
dend <- fviz_dend(H_Clust_complete, main="Complete", show_labels=TRUE)
cut(dend, h = 125)
plot(dend)
l <- lines(0, 125, 50, 125)
plot(dend, l)
cutree(H_Clust_average, H=125)
cutree(H_Clust_average, h=125)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", k = 11, hc_method="average")
plot(H_Clust_average, labels=europe[,1])
fviz_dend(H_Clust_average, data=europe, k = 11, main="Average", show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", h = 125,  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", cex = 0.5,  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete",  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", cex = 0.5,  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", cex = 0.5, k = 4,  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", k = 4, h = 0.5,  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", h = 0.5,  show_labels=TRUE)
fviz_dend(H_Clust_average, main="Complete", h = 5,  show_labels=TRUE)
fviz_dend(H_Clust_average, h = 5)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", k = NULL, hc_method="average")
fviz_dend(H_Clust_average, h = 5)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", k = NULL, hc_method="average")
plot(H_Clust_average, labels=europe[,1])
fviz_dend(H_Clust_average, data=europe, k = 11, main="Average", show_labels=TRUE)
fviz_dend(H_Clust_average, data=europe, h = 11, main="Average", show_labels=TRUE)
fviz_dend(H_Clust_average, data=europe, k = 11, main="Average", show_labels=TRUE)
fviz_dend(H_Clust_average, data=europe, k = 11, main="Average", show_labels=TRUE)
=
H_Clust_average <- eclust(europe, FUNcluster = "hclust", k = 11, hc_method="average")
fviz_dend(H_Clust_average, data=europe, k = 11, main = "Average", show_labels=TRUE)
clusters.3 <- cutree(H_Clust_average, h = 125)
plot(clusters.3)
cutree(H_Clust_average, h = 125)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average")
cutree(H_Clust_average, h = 125)
wdwsetwd("H:\\DATA MINING\\Assignment 4")
europe = read.table("Languages Spoken in Europe.txt", header=T, skip = 17)
rownames(europe) <- europe[,1]
europe <- europe[,-1]
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average")
fviz_dend(H_Clust_average, data=europe, k = 11, main = "Average", show_labels=TRUE)
cutree(H_Clust_average, h = 125)
table(cut_tree)
cut_tree <- cutree(H_Clust_average, h = 125)
table(cut_tree)
table(cut_tree, row.names(europe))
cut_tree <- cutree(H_Clust_average, h = 125)
table(cut_tree, row.names(europe))
table(cut_tree, row.names(row.names(europe)))
europe = read.table("Languages Spoken in Europe.txt", header=T, skip = 17)
rowNames <- europe[,1]
rowNames
table(cut_tree, row.names(rowNames))
rownames(europe) <- europe[,1]
europe <- europe[,-1]
table(cut_tree, row.names(europe))
H_Clust_single <- eclust(europe, "hclust", palette="jco",  hc_method="single")
fviz_dend(H_Clust_single, data=europe, main="Single", show_labels=TRUE)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", palette="uchicago", hc_method="average")
fviz_dend(H_Clust_average, data=europe, k = 11, main = "Average", show_labels=TRUE)
fviz_dend(H_Clust_average, data=europe, palette="uchicago", main = "Average", show_labels=TRUE)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average")
fviz_dend(H_Clust_average, data=europe, palette="uchicago", main = "Average", show_labels=TRUE)
H_Clust_single <- eclust(europe, "hclust",  hc_method="single",k=7)
fviz_dend(H_Clust_single, data=europe, main="Single", show_labels=TRUE,palette = "uchicago")
H_Clust_complete <- eclust(europe, "hclust", hc_method="complete", graph = TRUE)
plot(H_Clust_complete, labels=europe[,1])
fviz_dend(H_Clust_complete, data=europe, palette="uchicago", main="Complete", show_labels=TRUE)
H_Clust_single <- eclust(europe, "hclust",  hc_method="single")
fviz_dend(H_Clust_single, data=europe, palette="uchicago", main="Single", show_labels=TRUE)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average")
fviz_dend(H_Clust_average, data=europe, palette="uchicago", main = "Average", show_labels=TRUE)
fviz_dend(H_Clust_single, data=europe, palette="jco", main="Single", show_labels=TRUE)
fviz_dend(H_Clust_single, data=europe, palette="uchicago", main="Single", show_labels=TRUE)
library(cluster)
library(factoextra)
wdwsetwd("H:\\DATA MINING\\Assignment 4")
europe = read.table("Languages Spoken in Europe.txt", header=T, skip = 17)
rowNames <- europe[,1]
rownames(europe) <- europe[,1]
europe <- europe[,-1]
H_Clust_single <- eclust(europe, "hclust",  hc_method="single")
fviz_dend(H_Clust_single, data=europe, palette="uchicago", main="Single", show_labels=TRUE)
H_Clust_single <- eclust(europe, "hclust",  hc_method="single", k = 7)
plot(H_Clust_single, labels=europe[,1])
stats <- cluster.stats(dist(europe), H_Clust_single$cluster)
fviz_dend(H_Clust_single, data=europe, palette="uchicago", main="Single", show_labels=TRUE)
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average", k = 7)
plot(H_Clust_average, labels=europe[,1])
stats <- cluster.stats(dist(europe), H_Clust_average$cluster)
fviz_dend(H_Clust_average, data=europe, palette="uchicago", main = "Average", show_labels=TRUE)
H_Clust_complete <- eclust(europe, "hclust", hc_method="complete", k = 7)
plot(H_Clust_complete, labels=europe[,1])
stats <- cluster.stats(dist(europe), H_Clust_complete$cluster)
fviz_dend(H_Clust_complete, data=europe, palette="uchicago", main="Complete", show_labels=TRUE)
stats_Single$dunn
H_Clust_single <- eclust(europe, "hclust",  hc_method="single", k = 7)
plot(H_Clust_single, labels=europe[,1])
stats_Single <- cluster.stats(dist(europe), H_Clust_single$cluster)
fviz_dend(H_Clust_single, data=europe, palette="uchicago", main="Single", show_labels=TRUE)
stats_Single$dunn
stats_Complete <- cluster.stats(dist(europe), H_Clust_complete$cluster, silhouette = T)
stats_Complete
stats_Complete$silhoutte
stats_Single$dunn
stats_Average$dunn
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average", k = 7)
plot(H_Clust_average, labels=europe[,1])
stats_Average <- cluster.stats(dist(europe), H_Clust_average$cluster)
fviz_dend(H_Clust_average, data=europe, palette="uchicago", main = "Average", show_labels=TRUE)
stats_Average$dunn
stats_Complete$dunn
stats_Single
fviz_silhouette(H_Clust_single)
stats_Complete$dunn
H_Clust_complete <- eclust(europe, "hclust", hc_method="complete", k = 7)
plot(H_Clust_complete, labels=europe[,1])
stats_Complete <- cluster.stats(dist(europe), H_Clust_complete$cluster, silhouette = T)
fviz_dend(H_Clust_complete, data=europe, palette="uchicago", main="Complete", show_labels=TRUE)
stats_Complete$dunn
stats_Single$avg.silwidth
H_Clust_average <- eclust(europe, FUNcluster = "hclust", hc_method="average", k = 7)
plot(H_Clust_average, labels=europe[,1])
stats_Average <- cluster.stats(dist(europe), H_Clust_average$cluster, silhouette = T)
fviz_dend(H_Clust_average, data=europe, palette="uchicago", main = "Average", show_labels=TRUE)
stats_Average$avg.silwidth
fviz_silhouette(H_Clust_average)
stats_Complete$avg.silwidth
fviz_silhouette(H_Clust_complete)
setwd("H:\\DATA MINING\\Assignment 4\\")
lines <- readLines('Languages Spoken in Europe.txt')
data <- read.table(text = lines[-c(1:17)], header = T)
write.csv(data, "NewData4.csv", row.names = F)
cleanDataSet <- read.csv("NewData4.csv", header=T, sep=",", comment.char = '#')
View(cleanDataSet)
data <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
library(factoextra)
library(cluster)
data1 <- read.table(text = lines[-c(1:17)], header = T)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
view(data1)
View(data1)
View(data1)
rownames(data1) <- data1[,1]
data1 <- data1[,-1]
View(data1)
ha1.complete <- eclust(data1, "hclust",hc_method="average" , k=7)
stats <- fpc::cluster.stats(dist(data), hc1.complete$cluster , silhouette = T)
stats <- fpc::cluster.stats(dist(data), hc1.complete$cluster , silhouette = T)
stats <- fpc::cluster.stats(dist(data1), hc1.complete$cluster , silhouette = T)
stats <- cluster.stats(dist(data1), ha1.complete$cluster , silhouette = T)
stats$dunn
setwd("H:\\DATA MINING\\Assignment 4\\")
lines <- readLines('Languages Spoken in Europe.txt')
data1 <- read.table(text = lines[-c(1:17)], header = T)
write.csv(data, "NewData4.csv", row.names = F)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
library(factoextra)
library(cluster)
rownames(data1) <- data1[,1]
data1 <- data1[,-1]
ha1.complete <- eclust(data1, "hclust",hc_method="average" , k=7)
fviz_dend(ha1.complete, rect = TRUE , main='Average', palette = "uchicago")
View(data1)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
data1 <- read.table(text = lines[-c(1:17)], header = T)
write.csv(data, "NewData4.csv", row.names = F)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
cleanDataSet <- read.csv("NewData4.csv", header=T, sep=",", comment.char = '#')
setwd("H:\\DATA MINING\\Assignment 4\\")
lines <- readLines('Languages Spoken in Europe.txt')
data1 <- read.table(text = lines[-c(1:17)], header = T)
write.csv(data1, "NewData4.csv", row.names = F)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
write.csv(data1, "NewData4.csv", row.names = F)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
library(factoextra)
library(cluster)
rownames(data1) <- data1[,1]
data1 <- data1[,-1]
ha1.complete <- eclust(data1, "hclust",hc_method="average" , k=7)
stats <- cluster.stats(dist(data1), ha1.complete$cluster , silhouette = T)
stats$dunn
setwd("H:\\DATA MINING\\Assignment 4\\")
lines <- readLines('Languages Spoken in Europe.txt')
data1 <- read.table(text = lines[-c(1:17)], header = T)
write.csv(data1, "NewData4.csv", row.names = F)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
library(factoextra)
library(cluster)
rownames(data1) <- data1[,1]
data1 <- data1[,-1]
hc1.complete <- eclust(data, "hclust",hc_method="complete" ,k=7)
hc1.complete <- eclust(data1, "hclust",hc_method="complete" ,k=7)
stats <- fpc::cluster.stats(dist(data1), hc1.complete$cluster , silhouette = T)
stats$dunn
rm(list=ls())
setwd("H:\\DATA MINING\\Assignment 4\\")
lines <- readLines('Languages Spoken in Europe.txt')
data1 <- read.table(text = lines[-c(1:17)], header = T)
write.csv(data1, "NewData4.csv", row.names = F)
data1 <- read.csv("NewData4.csv", sep=",", header=T, comment.char = "#")
library(factoextra)
library(cluster)
rownames(data1) <- data1[,1]
data1 <- data1[,-1]
hc1.complete <- eclust(data1, "hclust",hc_method="complete" ,k=7)
stats <- fpc::cluster.stats(dist(data1), hc1.complete$cluster , silhouette = T)
stats$dunn
corpus <- list.files("H:\\DATA MINING\\Assignment 4\\corpus", full.names=T)
View(corpus)
corpus
corpus_files <- list.files("H:\\DATA MINING\\Assignment 4\\corpus", full.names=T)
library(TextReuse)
install.packages('TestReuse')
install.packages('testreuse')
install.packages('textreuse')
library(textreuse)
tokens(corpus_files)
tokenize(corpus_files)
TextReuseCorpus(corpus_files)
tokens <- TextReuseCorpus(corpus_files)
tokens
tokenize(tokens)
`tokens<-`(tokens)
tokens <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5,
minhash_func = minhash, keep_tokens = TRUE)
tokens <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash, keep_tokens = TRUE)
minhash <- minhash_generator(n=160, seed=100)
tokens <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash, keep_tokens = TRUE)
names(tokens)
wordcount(corpus)
corpus <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash, keep_tokens = TRUE)
wordcount(corpus)
tokens(corpus)
t <- tokens(corpus)
summary(t)
tokens(corpus)
table(t)
summary(t)
summary(t[2,])
summary(t[,2])
summary(t)
t[1,1]
t(1:1)
t(1:1)
sum(t$g2pC_taskd)
t
summary(t[2,])
summary(t)
sum(length(t$g2pC_taskd))
sum(length(t))
sum(length(t$1))
sum(length(t$All))
sum(length(t$ALL))
s <- summary(t[2,])
s <- summary(t)
sum(length(s))
s
sum(length(s$Length))
sum(length(s[,2]))
sum((s[,2]))
sum((s[,3]))
sum((s[5,3]))
sum(s[5,3])
sum(s[5,3])
sum(length(corpus))
sum(length([corpus[,1]))
sum(length(corpus[,1]))
sum(length(corpus[1,1]))
wordcount
corpus <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash, keep_tokens = TRUE)
names(corpus)
wordcount(corpus)
summary(w)
w <- wordcount(corpus)
summary(w)
length(w)
sum(length(w))
sum((w))
tokens(corpus)
summary(s)
s <- summary(t)
s
w
sum((t))
t
summary(t)
s <- summary(t)
t
View(t)
sum(View(t))
df <- data.frame(w)
View(df)
df <- data.frame(t)
df <- data.frame(s)
View(df)
df <- data.frame(s)[0:99]
df <- data.frame(s)[1:99]
df <- data.frame(s)[2]
View(df)
df <- data.frame(s)(0:99)
df <- data.frame(s)
df <- df[1:99]
df <- df[,-1]
view(df)
View(df)
df <- df[,-2]
View(df)
df <- data.frame(s)
df <- df[,-2]
View(df)
df <- data.frame(s)
df <- df[,-1]
df <- df[,-1]
View(df)
df <- df[,-1]
df <- data.frame(s)
df <- df[,-1]
View(df)
df$Freq(1 : 99)
df$Freq[1:99]
df$Freq[1:100]
df1 <- df$Freq[1:100]
summary(df1)
View(df1)
sum(df1)
df1 <- df$Freq[0:99]
View(df1)
sum(df1)
df <- data.frame(t)
s <- summary(t)
df <- data.frame(t)
df <- data.frame(s)
View(df)
df$Freq[0:99]
sum(df$Freq[0:99])
df <- as.numeric(as.character(data.frame(s)))
df$Freq[0:99]
view(df)
View(df)
sum(as.numeric(df$Freq[0:99]))
sum(as.character(df$Freq[0:99]))
df$Freq[0:99]
df <- data.frame(s)
df <- as.numeric(df$Freq[0:99])
View(df)
sum(df)
df <- data.frame(s)
df$Freq[1:100]
df <- as.numeric(df$Freq[1:5])
View(df)
sum(df)
df <- data.frame(s)
df$Freq[1:5]
df <- as.numeric(df$Freq[1:5])
View(df)
sum(df$Freq[0:99])
df <- as.numeric(as.character(df$Freq[1:5]))
df$Freq[1:5]
df <- data.frame(s)
df$Freq[1:5]
df1 <- df$Freq[1:5]
sum(df1)
View(df1)
w <- wordcount(corpus)
w
sum(w)
length(unlist(tokens(corpus)))
tokens(corpus)
tok <- tokens(corpus)
tok$orig_taske
tok$orig_taske[1:5]
minhash240 <- minhash_generator(n=240, seed=100)
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash240, keep_tokens = TRUE)
corpus240
length(unlist(tokens(corpus240)))
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 240, minhash_func = minhash240, keep_tokens = TRUE)
length(unlist(tokens(corpus240)))
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, minhash_func = minhash240, keep_tokens = TRUE)
length(unlist(tokens(corpus240)))
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 240, minhash_func = minhash240, keep_tokens = TRUE)
length(unlist(tokens(corpus240)))
signature(corpus)
signature(corpus240)
SignatureMethod(corpus)
buckets <- lsh(corpus, bands = 40)
candidates <- lsh_candidates(buckets)
lsh_compare(candidates, corpus, jaccard_similarity)
lsh_probability(h = 240, b =  40, s = 0.5)
lsh_probability(h = 240, b =  100, s = 0.5)
lsh_probability(h = 240, b =  80, s = 0.5)
lsh_probability(h = 240, b =  60, s = 0.5)
lsh_probability(h = 240, b =  50, s = 0.5)
lsh_probability(h = 240, b =  54, s = 0.5)
lsh_probability(h = 240, b =  56, s = 0.5)
lsh_probability(h = 240, b =  48, s = 0.5)
lsh_probability(h = 240, b =  52, s = 0.5)
lsh_probability(h = 240, b =  60, s = 0.5)
lsh_probability(h = 240, b =  48, s = 0.5)
lsh_probability(h = 240, b =  54, s = 0.5)
lsh_probability(h = 240, b =  58, s = 0.5)
lsh_probability(h = 240, b =  50, s = 0.5)
lsh_probability(h = 240, b =  60, s = 0.5)
lsh_probability(h = 240, b =  60, s = 0.5)
lsh_probability(h = 240, b =  60, s = 1)
lsh_probability(h = 240, b =  60, s = 0.8)
lsh_probability(h = 240, b =  60, s = 0.4)
lsh_probability(h = 240, b =  60, s = 0.3)
lsh_probability(h = 240, b =  72, s = 0.3)
lsh_probability(h = 240, b =  90, s = 0.3)
lsh_probability(h = 240, b =  80, s = 0.3)
lsh_compare(candidates, corpus, jaccard_similarity)
jaccard_similarity(corpus)
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
lsh_compare(candidates, corpus, jaccard_similarity)
sort(candidates$score, decreasing = T)
s <- sort(candidates$score, decreasing = T)
s <- sort(candidates, decreasing = T)
s <- sort(candidates$score, decreasing = T)
sort.list(candidates$score)
sort.list(candidates$score, decreasing = T)
s <- sort.list(candidates, decreasing = T)
s <- sort.list(candidates$score, decreasing = T)
s
candidates[order(candidates$score)]
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
candidates
buckets <- lsh(corpus, bands = 80)
corpus_files <- list.files("H:\\DATA MINING\\Assignment 4\\corpus", full.names=T)
corpus <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash, keep_tokens = TRUE)
minhash <- minhash_generator(n=160, seed=100)
corpus <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash, keep_tokens = TRUE)
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
lsh_compare(candidates, corpus, jaccard_similarity)
l <- lsh_compare(candidates, corpus, jaccard_similarity)
l[order(l$score)]
candidates
l
s <- sort(l$score, decreasing = T)
s
order(l$score)
l
order(l$score)
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
l <- lsh_compare(candidates, corpus, jaccard_similarity)
order(l$score)
l
s <- sort.list(l$score, decreasing = T)
s
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
l <- lsh_compare(candidates, corpus, jaccard_similarity)
l
View(l)
s <- l
l <- l[order(l$score, decreasing = T)]
l <- l[order(l$score, decreasing = T),]
View(l)
l
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
pairs <- lsh_compare(candidates, corpus, jaccard_similarity)
pairs <- pairs[order(pairs$score, decreasing = T),]
pairs
pairs[1:5]
pairs[,1:5]
pairs[1:5,]
minhash240 <- minhash_generator(n=240, seed=100)
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 240, minhash_func = minhash240, keep_tokens = TRUE)
corpus240
length(unlist(tokens(corpus240)))
tokens(corpus240)
minhash240 <- minhash_generator(n=240, seed=100)
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, minhash_func = minhash240, keep_tokens = TRUE)
corpus240
length(unlist(tokens(corpus240)))
tokens(corpus240)
minhash240 <- minhash_generator(n=240, seed=100)
corpus240 <- TextReuseCorpus(corpus_files, tokenizer = tokenize_ngrams, n = 5, minhash_func = minhash240, keep_tokens = TRUE)
length(unlist(tokens(corpus240)))
tokens(corpus240)
buckets <- lsh(corpus, bands = 80)
candidates <- lsh_candidates(buckets)
candidates
pairs <- lsh_compare(candidates, corpus, jaccard_similarity)
pairs
